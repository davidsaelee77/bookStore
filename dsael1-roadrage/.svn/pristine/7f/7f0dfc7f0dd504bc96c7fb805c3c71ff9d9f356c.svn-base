
package model;

import java.util.ArrayList;
import java.util.Map;
import java.util.Random;

/**
 * 
 * @author David Saelee
 * @version 10/24/2018
 *
 */
public final class Atv extends AbstractVehicle implements Vehicle {
    /**
     * 
     */
    private static final int DEATH_TIME = 25;

    /**
     * 
     * @param theX x coordinate value
     * @param theY y coordinate value
     * @param theDir direction value
     */
    public Atv(final int theX, final int theY, 
                final Direction theDir) {
        super(theX, theY, theDir, DEATH_TIME);
    }

    /*
     * ATVs can travel on any terrain except walls. They randomly select to go
     * straight, turn left, or turn right. ATV’s never reverse direction (they
     * never need to). ATV’s drive through all traffic lights and crosswalk
     * lights without stopping! Collision behavior: An ATV dies if it collides
     * with a living truck, car, or
     */

    // ATVS ON ALL TERRAIN
    // Straight, left, right, never reverse
    // Drive through all traffic lights

    @Override
    public boolean canPass(final Terrain theTerrain, final Light theLight) {

        return theTerrain != Terrain.WALL;
    }

    @Override
    public Direction chooseDirection(final Map<Direction, Terrain> theNeighbors) {

        final ArrayList<Direction> directionList =
                        new ArrayList<Direction>(theNeighbors.keySet());

        final int randomNumber = new Random().nextInt(directionList.size());

        directionList.get(randomNumber);

        if (theNeighbors.get(directionList.get(randomNumber)) != Terrain.WALL) {

            return directionList.get(randomNumber);

        }
        return directionList.get(randomNumber);
    }

}
