package model;

import java.util.ArrayList;
import java.util.Map;
import java.util.Random;
/**
 * 
 * @author David Saelee
 * @version 10/24/2018
 *
 */
public final class Car extends AbstractVehicle implements Vehicle {
    /**
     * 
     */
    private static final int DEATH_TIME = 15;
    /**
     * 
     * @param theX x coordinate value.
     * @param theY y coordinate value.
     * @param theDir direction value.
     */
    private Car(final int theX, final int theY, final Direction theDir) {
        super(theX, theY, theDir, DEATH_TIME);

    }
    


    
    //Car travels only on street and through lights and crosswalks
    //Drives staright, turns left, right, turns around
    //Car stops for red lights
    //Car ignores yellow and green lights
    //Car stops for red and yellow crosswalk lights, drive through green crosswalk lights
    
    @Override
    public boolean canPass(final Terrain theTerrain, final Light theLight) {
      
        return theTerrain == Terrain.CROSSWALK && theLight != Light.YELLOW 
                        || theTerrain == Terrain.STREET && theLight != Light.RED;
    }

    @Override
    public Direction chooseDirection(final Map<Direction, Terrain> theNeighbors) {
       
        final ArrayList<Direction> directionList = 
                        new ArrayList<Direction>(theNeighbors.keySet());

        final int randomNumber = new Random().nextInt(directionList.size());

        directionList.get(randomNumber);

        if (theNeighbors.get(directionList.get(randomNumber)) == Terrain.STREET) {

            return directionList.get(randomNumber);

        }
        if (theNeighbors.get(directionList.get(randomNumber)) == Terrain.CROSSWALK) {

            return directionList.get(randomNumber);

        } else {

            directionList.remove(directionList.get(randomNumber));
        }
        return directionList.get(randomNumber);
    }

}
