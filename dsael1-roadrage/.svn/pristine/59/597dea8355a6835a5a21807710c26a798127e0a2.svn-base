
package model;
/**
 * 
 * @author David Saelee
 * @version 10/24/2018
 *
 */
public abstract class AbstractVehicle implements Vehicle {
    /**
     * 
     */
    private int myX;
    /**
     * 
     */
    private int myY;
    /**
     * 
     */
    private Direction myDirection;

    // initial position and direction
    /**
     * 
     */
    private int myInitialX;
    /**
     * 
     */
    private int myInitialY;
    /**
     * 
     */
    private Direction myInitialDirection;
    /**
     * 
     */
    private boolean myLifeStatus;
    /**
     * 
     */
    private int myTimeToRevive;
    /**
     * 
     */
    private int myDeathTime;
    /**
     * 
     * @param theX x coordinate value
     * @param theY y coordinate value
     * @param theDir direction value
     * @param theDeathTime death time value
     */
    protected AbstractVehicle(final int theX, final int theY, final Direction theDir,
                              final int theDeathTime) {

        myTimeToRevive = 0;

        myInitialX = theX;
        myInitialY = theY;
        myInitialDirection = theDir;

        myX = theX;
        myY = theY;
        myDirection = theDir;
        myLifeStatus = true;
        myDeathTime = theDeathTime;
    }

    @Override
    public void collide(final Vehicle theOther) {

        if (this.myDeathTime > theOther.getDeathTime()) {

            myLifeStatus = false;
            myTimeToRevive = this.getDeathTime();
        }

    }

    @Override
    public int getDeathTime() {
        return myDeathTime;
    }

    @Override
    public String getImageFileName() {
        return getClass().getSimpleName().toLowerCase() + ".gif";
    }

    @Override
    public Direction getDirection() {

        return myDirection;
    }

    @Override
    public int getX() {
        return myX;
    }

    @Override
    public int getY() {
        return myY;
    }

    @Override
    public boolean isAlive() {

        return myLifeStatus;
    }

    @Override
    public void poke() {
        if (myTimeToRevive > 0) {
            myTimeToRevive--;
        }
        if (myTimeToRevive == 0) {
            myLifeStatus = true;
        }

    }

    @Override
    public void reset() {
        myX = myInitialX;
        myY = myInitialY;
        myDirection = myInitialDirection;
    }

    @Override
    public void setDirection(final Direction theDir) {

        myDirection = theDir;

    }

    @Override
    public void setX(final int theX) {

        myX = theX;

    }

    @Override
    public void setY(final int theY) {

        myY = theY;

    }

}
